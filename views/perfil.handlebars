<div class="container  w-75 bg-primary mt-5 rounded shadow">
        <div class="row align-items-stretch">
            <div class="col bg-white p-5 rounded">
                <div class="row">
                    <div class="col-12 col-md-6 mb-3 mt-3">
                        <h2>Mi Perfil:</h2>
                      </div>
                      <div class="col-12 col-md-6 d-grid gap-2 d-md-flex  justify-content-md-end pt-3 pb-3">
                        
                        <a href="/armaTuComputador" class="btn btn-outline-primary">Arma tu Computador</a>
                        <a href="/misSolicitudes" class="btn btn-outline-primary">Mis Solicitudes</a>
                        
                      </div>
                </div>
                <div class="row g-4 mt-3">
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Nombre:</label>
                    <input  type="text" class="form-control" id="nombreInput" pattern="^[A-Za-z]+$" placeholder="{{restUsuario.nombre}}" value={{restUsuario.nombre}}></input>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Apellido:</label><br>
                    <input type="text" class="form-control" id="apellidoInput" pattern="^[A-Za-z]+$" placeholder="{{restUsuario.apellido}}" value={{restUsuario.apellido}}></input>
                </div>
                <div class="col-12">
                    <label class="fw-bold">Correo electrónico:</label><br>
                    <input type="email" class="form-control" id="correoInput"disabled value={{restUsuario.email}}></input>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Número de contacto:</label>
                    <input type="tel" class="form-control" maxlength="12" id="contactoInput" pattern="^(\(?\+[\d]{1,3}\)?)\s?([\d]{1,5})\s?([\d][\s\.-]?){6,7}$" value={{restUsuario.telefono}}>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Dirección:</label>
                    <input type="text" class="form-control" id="direccionInput" value="{{restUsuario.direccion}}">
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Ciudad:</label>
                    <select class="form-select" aria-label="Default select example" id="ciudadSelect">
                        <option value={{ciudad.id_region}} selected>{{ciudad.nombre}}</option>
                        {{#each ciudades}}
                        <option value={{this.id_region}}>{{this.nombre}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
                    <label class="fw-bold">Comuna:</label>
                    <select class="form-select" aria-label="Default select example" id="comunaSelect2">
                        <option value="{{comuna.id_comuna}}"selected>{{comuna.nombre}}</option>
                    </select>
                </div>
                <div class="col-12" hidden>
                    <label class="fw-bold">Comuna:</label>
                    <select class="form-select" aria-label="Default select example" id="comunaSelect">
                        <option selected>Seleccione una ciudad</option>
                        {{#each comunas}}
                        <option class={{this.id_comuna}} value={{this.id_region}}>{{this.nombre}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="d-grid gap-2 col-12 mx-auto">
                    <button type="submit" class="btn btn-primary" id="btnModificar">Modificar Datos</button>
                </div>
            </form>
        </div>
        </div>
    </div>
<script>
     
    // Se obtienen los elementos HTML por su ID.
     const selectCiudad = document.getElementById("ciudadSelect");
     const selectComuna = document.getElementById("comunaSelect");
     const selectComunaDos = document.getElementById("comunaSelect2");
     const inputNombre = document.getElementById("nombreInput");
     const inputApellido = document.getElementById("apellidoInput");
     const inputCorreo = document.getElementById("correoInput");
     const inputContacto = document.getElementById("contactoInput");
     const inputDireccion = document.getElementById("direccionInput");
     const btnModificar = document.getElementById("btnModificar");
    
    //Agrega un detector de eventos al elemento selectCiudad, cuando se activa el evento, llamará la función cargarSelectComuna
    selectCiudad.addEventListener("change", (evento) => cargarSelectComuna(evento, selectComuna));

    // Función que se llama cuando se cambia el elemento selectCiudad. Se utiliza para poblar el select elementoComunaDos.
    const cargarSelectComuna = (evento, elementoComuna)=>{
        if(event.target.selectedIndex !== 0){
            const ciudadSeleccionada = event.target.selectedIndex;
            const opciones = elementoComuna.options;
            selectComunaDos.innerHTML = '<option>Seleccione una comuna</option>';
            
            for (let item of opciones) {
                if(item.value == ciudadSeleccionada){
                    selectComunaDos.innerHTML += `
                    <option class=${item.value} value=${item.className}>${item.text}</option>
                    `;
                } 
            }
        }
    }

    // Agrega un detector de eventos al elemento btnModificar, cuando se activa el evento, enviará una solicitud PUT al servidor para modificar el usuario
    btnModificar.addEventListener("click", async (e) => {
            e.preventDefault();

            const nombre = inputNombre.value;
            const apellido = inputApellido.value;
            const correo = inputCorreo.value;
            const contacto = inputContacto.value;
            const direccion = inputDireccion.value;
            const comuna = selectComunaDos.options[selectComunaDos.selectedIndex].value;

            if (nombre === "" || nombre.length < 2 || !inputNombre.checkValidity()) {
                inputNombre.classList.add("border-danger");
                alert("Favor ingrese un nombre, solo letras y con un largo mayor o igual a dos.");
                return false;
            } else {
                inputNombre.classList.remove("border-danger");
                inputNombre.classList.add("border-success");
            }

            if (apellido === "" || apellido - length < 2 || !inputApellido.checkValidity()) {
                inputApellido.classList.add("border-danger");
                alert("Favor ingrese un apellido, solo letras y con un largo mayor o igual a dos.");
                return false;
            } else {
                inputApellido.classList.remove("border-danger");
                inputApellido.classList.add("border-success");
            }

            if(contacto === "" || !inputContacto.checkValidity()){
            inputContacto.classList.add("border-danger");
            alert("Formato de teléfono erróneo.");
            return false;
        }else{
            inputContacto.classList.remove("border-danger");
            inputContacto.classList.add("border-success");
        }

        if(direccion === ""){
            inputDireccion.classList.add("border-danger");
            alert("Ingrese dirección.");
            return false;
        }else{
            inputDireccion.classList.remove("border-danger");
            inputDireccion.classList.add("border-success");
        }

        if(selectCiudad.selectedIndex === 0){
            selectCiudad.classList.add("border-danger");
            alert("Favor selecciona ciudad.");
            return false;
        }else{
            selectCiudad.classList.remove("border-danger");
            selectCiudad.classList.add("border-success");
        }

        if(selectComunaDos.selectedIndex === 0){
            selectComunaDos.classList.add("border-danger");
            alert("Favor selecciona comuna.");
            return false;
        }else{
            selectComunaDos.classList.remove("border-danger");
            selectComunaDos.classList.add("border-success");
        }

            const datos = { nombre, apellido, correo, contacto, direccion, comuna };

            await fetch("/usuario", {
                method: "PUT",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(datos),
            }).then(res => {
                if(res.status === 200){
                    alert("Datos modificados con exito");
                    location.reload();
                }
            })
                .catch(err => alert(err));
        })
</script>
