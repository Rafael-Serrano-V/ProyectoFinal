
    <div class="container w-75 bg-primary mt-5 rounded shadow">
        <div class="row align-items-stretch">
            <div class="col bg-white p-5 rounded">
                <div class="row">
                    <div class="col-12 col-md-6 mb-3 mt-3">
                        <h2>Mantenedor Solicitudes:</h2>
                    </div>
                    <div class="col-12 col-md-6 d-grid gap-2 d-md-flex  justify-content-md-end pt-3 pb-3">
                        <a href="/home" class="btn btn-primary">Volver atrás</a>
                    </div>
                    {{#unless solicitudUnica}}
                    <h3> Sin Solicitudes registradas!</h3>
                    {{/unless}}
                    {{#each solicitudUnica}}
                    <div class="table-responsive table-responsive-sm table-responsive-md table-responsive-lg">
                        <table class="table table-success table-striped table-bordered border-primary" id="{{this}}">
                            <thead>
                            <tr>
                                <th colspan="4">Código de Solicitud: <label class="text-primary">{{this}}</label>  <button class="btn btn-primary btnDetalle" type="button" id="{{this}}">Ver detalle</button></th>
                            </tr>
                        </thead>
                        </table>
                    </div>
                    {{/each}}
            </div>
</div>
</div>

<script>
    // Se obtienen todas las tablas, tbody y thead elementos en la página.
    const tablas = document.getElementsByTagName("table");
    const cuerpoTablas = document.getElementsByTagName("tbody");
    const headTablas = document.getElementsByTagName("thead");

// Da formato al número a un formato de moneda.
  const formatearPeso = new Intl.NumberFormat('es-CL', {
       style: 'currency',
       currency: 'CLP',
       minimumFractionDigits: 0
     });

     const completarSolicitud = async (evento,idPedido) => {
        console.log(idPedido);
     }

// Esta función se llama cuando el usuario hace clic en el botón "Ver detalle".
//Esta función es responsable de realizar una solicitud al servidor para obtener los detalles del pedido.
const obtenerSolicitudesPorId = async (evento,idPedido) => {

    console.log(idPedido);
    const response = await fetch(`/solicitudes/${idPedido}`);
    let data = await response.json();

    console.log(data);

    const productos = data.detalleProducto;
    const solicitudes = data.solicitud;

    

    const tablaCorrecta = Array.from(tablas).filter(tabla => tabla.id === idPedido)
    const tabla = tablaCorrecta[0];

    tabla.innerHTML = "";
    tabla.innerHTML += `
                <table class="table table-success table-striped table-bordered border-primary" id="${idPedido}">
                    <thead>
                        <tr>
                            <th colspan="4">Código de Solicitud: <label class="text-primary">${idPedido}</label> <button class="btn btn-primary btnDetalle" type="button" id="${idPedido}" hidden>Ver detalle</button></th>
                        </tr>
                        <tr>
                            <th scope="col">Foto Referencia</th>
                            <th scope="col">Producto</th>
                            <th scope="col">Precio</th>
                        </tr>
                    </thead>
                    <tbody id="cuerpo${idPedido}">
                    </tbody>
                    <thead id="head${idPedido}">
                    </thead>

                </table>
            </div>`
    
    const cuerpoTablaCorrecto = Array.from(cuerpoTablas).filter(cuerpo => cuerpo.id === "cuerpo"+idPedido);
    const cuerpo = cuerpoTablaCorrecto[0];


    
    let acumulador = 0;
    for (indice in productos){
        
        

        acumulador = acumulador + productos[indice].precio;

        
        cuerpo.innerHTML += `
        <tr>
            <td><img src="${productos[indice].foto}" alt="Foto no encontrada" width="80px" height="80px"></td>
            <td>${productos[indice].marca}® / ${productos[indice].nombre}</td>
            <td>` + formatearPeso.format(productos[indice].precio) + `</td>
        </tr>`
         
    };

    const headTablaCorrecto = Array.from(headTablas).filter(head => head.id === "head"+idPedido);
    const head = headTablaCorrecto[0];

    let estado = false;
    for (indice in solicitudes){
        
        if(solicitudes[indice].esta_completado){
            estado = true;
        }else{
            estado = false;
        }
    }

    if(estado){
        head.innerHTML += `
        <tr>
            <th colspan="2">Estado: <label class="text-success font-weight-bold">Completado</label> <input type="checkbox" class="checkCompletarSolicitud" id="${idPedido}"checked>Click para dejar pendiente</th>
            <th colspan="2">Precio Total: <label class="fw-bold">` + formatearPeso.format(acumulador) + `</label></th>
        </tr>`
    }else{
         head.innerHTML += `
        <tr>
            <th colspan="2">Estado: <label class="text-danger font-weight-bold">Pendiente</label> <input type="checkbox" class="checkCompletarSolicitud" id = "${idPedido}"checked>Click para completar</th>
            <th colspan="2">Precio Total: <label class="fw-bold">` + formatearPeso.format(acumulador) + `</label></th>
        </tr>`
    }
}

    // IFE que añade evento click a los botones con la clase "btnDetalle".
    (function agregarListenersBtnsDetalle(){
    let btnsDetalle = document.getElementsByClassName("btnDetalle");
    for(let i = 0; i < btnsDetalle.length; i++){
      btnsDetalle[i].addEventListener("click",(evento) => obtenerSolicitudesPorId(evento, btnsDetalle[i].id), false);
    }
  })();

  (function agregarListenersChecksCompletarSolicitud(){
    let checksCompletarSolicitud = document.getElementsByClassName("checkCompletarSolicitud");
    console.log(checksCompletarSolicitud);
    for(let i = 0; i < checksCompletarSolicitud.length; i++){
      checksCompletarSolicitud[i].addEventListener("click",(evento) => completarSolicitud(evento, checksCompletarSolicitud[i].id), false);
    }
  })();
</script>